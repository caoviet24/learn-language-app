#!/bin/bash

# -----------------------------
# Script migrate & update c·∫£ ReadDbContext v√† WriteDbContext
# -----------------------------

ACTION=$1        # migrate ho·∫∑c update
NAME=$2          # t√™n migration khi migrate

if [ "$ACTION" != "migrate" ] && [ "$ACTION" != "update" ]; then
  echo "‚ùå Sai c√∫ ph√°p!"
  echo "C√°ch d√πng:"
  echo "  ./migrate_all.sh migrate MigrationName   # T·∫°o migration + update DB"
  echo "  ./migrate_all.sh update                  # Ch·ªâ update DB"
  exit 1
fi

if [ "$ACTION" == "migrate" ] && [ -z "$NAME" ]; then
  echo "‚ùå Vui l√≤ng nh·∫≠p t√™n migration. V√≠ d·ª•: ./migrate_all.sh migrate InitDB"
  exit 1
fi

# MIGRATE
if [ "$ACTION" == "migrate" ]; then
  echo "üöÄ T·∫°o migration cho ReadDbContext..."
  dotnet ef migrations add "${NAME}_ReadDb" \
      --context ReadDbContext \
      --output-dir Data/ReadDb/Migrations || exit 1

  echo "üöÄ T·∫°o migration cho WriteDbContext..."
  dotnet ef migrations add "${NAME}_WriteDb" \
      --context WriteDbContext \
      --output-dir Data/WriteDb/Migrations || exit 1
fi

# UPDATE DATABASE
echo "üì¶ Update database cho ReadDbContext..."
dotnet ef database update --context ReadDbContext || exit 1

echo "üì¶ Update database cho WriteDbContext..."
dotnet ef database update --context WriteDbContext || exit 1

echo "‚úÖ Ho√†n t·∫•t!"

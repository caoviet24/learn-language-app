// <auto-generated />
using System;
using LearnLanguage.Infrastructure.Data.Write;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearnLanguage.Infrastructure.Migrations
{
    [DbContext(typeof(WriteDbContext))]
    partial class WriteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearnLanguage.Domain.Entities.ExcerciseMatch", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("excerciseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("left")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("leftMedia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("right")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rightMedia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("excerciseId");

                    b.ToTable("ExcerciseMatches");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.ExcerciseTrueFalse", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("answers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("excerciseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("media")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("excerciseId");

                    b.ToTable("ExcerciseTrueFalses");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.Excercises", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lessonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("lessonId");

                    b.ToTable("Excercises");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.ExcersiteFillBlank", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("excerciseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("media")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("excerciseId");

                    b.ToTable("ExcersiteFillBlanks");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.Lessons", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("expReward")
                        .HasColumnType("int");

                    b.Property<string>("levelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("topicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("createdBy");

                    b.HasIndex("levelId");

                    b.HasIndex("topicId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.Levels", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("requiredExp")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("createdBy");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.Topics", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("createdBy");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("emailConfirmedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isEmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nickName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.UserActivity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("deletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("exp")
                        .HasColumnType("int");

                    b.Property<bool>("isCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("streakDay")
                        .HasColumnType("int");

                    b.Property<int>("studyTime")
                        .HasColumnType("int");

                    b.Property<int>("totalWords")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("createdBy");

                    b.ToTable("UserActivities");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.ExcerciseMatch", b =>
                {
                    b.HasOne("LearnLanguage.Domain.Entities.Excercises", "excercise")
                        .WithMany("excerciseMatch")
                        .HasForeignKey("excerciseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("excercise");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.ExcerciseTrueFalse", b =>
                {
                    b.HasOne("LearnLanguage.Domain.Entities.Excercises", "excercise")
                        .WithMany("excerciseTrueFalse")
                        .HasForeignKey("excerciseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("excercise");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.Excercises", b =>
                {
                    b.HasOne("LearnLanguage.Domain.Entities.Lessons", "lesson")
                        .WithMany("excercises")
                        .HasForeignKey("lessonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("lesson");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.ExcersiteFillBlank", b =>
                {
                    b.HasOne("LearnLanguage.Domain.Entities.Excercises", "excercise")
                        .WithMany("excersiteFillBlanks")
                        .HasForeignKey("excerciseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("excercise");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.Lessons", b =>
                {
                    b.HasOne("LearnLanguage.Domain.Entities.User", "user")
                        .WithMany("lessons")
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LearnLanguage.Domain.Entities.Levels", "level")
                        .WithMany()
                        .HasForeignKey("levelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LearnLanguage.Domain.Entities.Topics", "topic")
                        .WithMany("lessons")
                        .HasForeignKey("topicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("level");

                    b.Navigation("topic");

                    b.Navigation("user");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.Levels", b =>
                {
                    b.HasOne("LearnLanguage.Domain.Entities.User", "user")
                        .WithMany("levels")
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("user");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.Topics", b =>
                {
                    b.HasOne("LearnLanguage.Domain.Entities.User", "user")
                        .WithMany("topics")
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("user");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.UserActivity", b =>
                {
                    b.HasOne("LearnLanguage.Domain.Entities.User", "user")
                        .WithMany("userActivities")
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("user");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.Excercises", b =>
                {
                    b.Navigation("excerciseMatch");

                    b.Navigation("excerciseTrueFalse");

                    b.Navigation("excersiteFillBlanks");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.Lessons", b =>
                {
                    b.Navigation("excercises");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.Topics", b =>
                {
                    b.Navigation("lessons");
                });

            modelBuilder.Entity("LearnLanguage.Domain.Entities.User", b =>
                {
                    b.Navigation("lessons");

                    b.Navigation("levels");

                    b.Navigation("topics");

                    b.Navigation("userActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
